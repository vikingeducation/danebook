# print page.html
# save_and_open_pag


#check out shallow nesting --> http://guides.rubyonrails.org/routing.html
~~
# the explicit way
 get 'users/sample' => 'users#sample', :as => 'sample_users'
~~

  POST(deletable, should destroy all it's comments & likes)
    -body:text
    -like_count: integer

  COMMENT(deletable, should destroy all it's likes)
    -body:text
    -like_count: integer




  LIKE(deletable)
    t.integer: user_id  AKA liker
    t.integer: comment / post

  -likeable_id:integer
  -likeable_type:string

  add_index :likes, [:likeable_type, :likeable_id]



model:
belongs_to :commentable, :polymorphic => true

##
class Comment < ActiveRecord::Base
  has_many :likes, :as => :likeable
end

class Post < ActiveRecord::Base
  has_many :likes, :as => :likeable
end




TODO:
    http://localhost:3000/users/ path is broken
    You must be logged into your own account to post on your timeline

    Timelines render all Posts for that User

    Users can "like" posts by clicking the "like" link

Posts display the total number of Likes

Posts display the first few names of who liked them


-add indexes
------------------

# Highlights a potential bug where a nested resource could have the same ID as the current user causing the logical expression `params[:id] == current_user.id.to_s` to be true and not redirecting when it should

# user/:user_id/posts/:id/update
# user_id == 1
# post.id == 1


# HAS BUG
def require_current_user
  unless params[:id] == current_user.id.to_s || params[:user_id] == current_user.id.to_s
    # redirect here
  end
end


# Fixes bug
def require_current_user
  user_id_key = controller_name == 'users' ? :id : :user_id
  unless params[user_id_key] == current_user.id.to_s
    #
  end
end

----------------------
